#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1cm
\topmargin 1cm
\rightmargin 1cm
\bottommargin 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Vilnius A0
\end_layout

\begin_layout Author
Smart VSCP A/D module
\end_layout

\begin_layout Date
Reversion 1.0 - 2012-05-02
\end_layout

\begin_layout Abstract
Vilnus A0 is an analog to digital module that connects to a CAN4VSCP bus
 that have five 10-bit analog to digital converter channels which can be
 up to 1/2 a kilometer from the controller.
 The module can be attached to a standard DIN Rail or be mounted directly
 on a wall (ordered separately).
 The module fully adopts to the CAN4VSCP specification and can be powered
 directly over the bus with a 9 - 28VDC power source.
 It has a rich register set for configuration and many information events
 defined.
 It also have a decision matrix for easy dynamic event handling.
 
\end_layout

\begin_layout Title
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/automation_company.png
	width 6cm

\end_inset


\end_layout

\begin_layout Author
Grodans Paradis AB
\end_layout

\begin_layout Author
Brattbergavägen 17
\end_layout

\begin_layout Author
820 50 LOS
\end_layout

\begin_layout Author
SWEDEN
\end_layout

\begin_layout Author
web: 
\begin_inset CommandInset href
LatexCommand href
target "http://www.auto.grodansparadis.com"

\end_inset


\end_layout

\begin_layout Author
email: 
\begin_inset CommandInset href
LatexCommand href
target "info@grodansparadis.com"

\end_inset


\end_layout

\begin_layout Author
phone: +46 8 40011835 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Copyright © 2011-2012, Grodans Paradis AB, All rights reserved
\end_layout

\begin_layout Title
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/pbfree.png
	width 2cm

\end_inset

 All boards produced by 
\emph on
Grodans Paradis AB
\emph default
 are ROHS compliant.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Disclaimer: © 2011-2012 Grodans Paradis AB.
 All rights reserved.
 Grodans Paradis AB®, logo and combinations thereof, are registered trademarks
 of Grodans Paradis AB.
 Other terms and product names may be trademarks of others.
 The information in this document is provided in connection with Grodans
 Paradis AB products.
 No license, express or implied or otherwise, to any intellectual property
 right is granted by this document or in connection with the sale of Grodans
 Paradis AB products.
 Neither the whole nor any part of the information contained in or the product
 described in this document may be adapted or reproduced in any material
 from except with the prior written permission of the copyright holder.
 The product described in this document is subject to continuous development
 and improvements.
 All particulars of the product and its use contained in this document are
 given by Grodans Paradis AB in good faith.
 However all warranties implied or expressed including but not limited to
 implied warranties of merchantability or fitness for purpose are excluded.
 This document is intended only to assist the reader in the use of the product.
 Grodans Paradis AB.
 shall not be liable for any loss or damage arising from the use of any
 information in this document or any error or omission in such information
 or any incorrect use of the product.
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Chapter
Vilnius A0 - smart VSCP A/D module
\end_layout

\begin_layout Standard
Vilnius A0 is an analog to digital module that connects to a CAN4VSCP bus
 and which have five analog to digital converter channels.
 The module can be attached to a standard DIN Rail or be mounted directly
 on a wall (ordered separately).
 The module fully adopts to the CAN4VSCP specification and can be powered
 directly over the bus with a 9-28V DC power source.
 It has a rich register set for configuration and many information events
 defined.
 It also have a decision matrix for easy dynamic event handling.
 
\end_layout

\begin_layout Standard
VSCP CAN modules are designed to work on a VSCP4CAN bus which use ordinary
 
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset

RJ-45 connectors and is powered with 9-28V DC over the same cable.
 This means there is no need for a separate power cable.
 All that is needed is a CAT5
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

 or better twisted pair cable.
 Buss length can be a maximum of 500 meters (recommended max 300 meters)
 with drops of maximum 24 meters length (up to a total of 120 meters).
 As for all VSCP4CAN modules the communication speed is fixed at 125 kbps.
 
\end_layout

\begin_layout Standard
All VSCP modules contains information of there own setup, manual, hardware
 version, manufacturer etc.
 You just ask the module for the information you need and you will get it.
 When they are started up they have a default functionality that often is
 all that is needed to get a working setup.
 If the module have something to report it will send you an event and if
 it is setup to react on a certain type of event it will do it's work when
 you send event(s) to it.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Section
Most current information
\end_layout

\begin_layout Standard
You can find the most current information about the Vilnius A0 at 
\begin_inset CommandInset href
LatexCommand href
target "http://www.auto.grodansparadis.com/accra/accra_a0.html"

\end_inset

.
 On the site you can also find links to the latest firmware and 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Module Description File
\end_layout

\end_inset

Module Description File (MDF
\begin_inset Index idx
status open

\begin_layout Plain Layout
MDF
\end_layout

\end_inset

) for the device as well as schematics and recipes for its use.
 This information is of course pointed to from the MDF file which you can
 locate from the module itself reading it's standard registers.
\end_layout

\begin_layout Section
The raw facts
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Parameter
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Value
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Supply voltage
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9-28VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
PCB Size
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42 mm x 72mm
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Power requirements
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1W.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Communication
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSCP4CAN (CAN), 125kbps
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of A/D channels
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Resolution
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10-bit
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The raw facts
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
Hardware
\end_layout

\end_inset

Hardware
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/accra_a0_rev_B.pdf
	width 12cm
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Schema
\end_layout

\end_inset

Schema for the Bejing A0
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
Some 
\begin_inset Index idx
status open

\begin_layout Plain Layout
key positions
\end_layout

\end_inset

key positions on the module is outlined in the figure below
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/board.jpg
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Road map to module
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Cable and 
\begin_inset Index idx
status collapsed

\begin_layout Plain Layout
connectors
\end_layout

\end_inset

connectors
\end_layout

\begin_layout Standard
The unit is powered over the CAN4VSCP bus.
 The CAN4VSCP normally uses 
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

CAT5 or better 
\begin_inset Index idx
status open

\begin_layout Plain Layout
twisted pair cable
\end_layout

\end_inset

twisted pair cable.
 You can use other cables if you which.
 The important thing is that the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANH
\end_layout

\end_inset

CANH and CANL
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANL
\end_layout

\end_inset

 signals uses a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
twisted cable
\end_layout

\end_inset

twisted cable.
 For connectors you can use RJ10
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ10
\end_layout

\end_inset

, RJ11
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ11
\end_layout

\end_inset

, RJ12
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ12
\end_layout

\end_inset

 or the most common RJ45
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ45
\end_layout

\end_inset

 connectors.
 There are different versions 
\end_layout

\begin_layout Subsubsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ-XX
\end_layout

\end_inset

RJ-XX pin-out 
\begin_inset CommandInset label
LatexCommand label
name "sub:RJ-XX-pin-out"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pin 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Use
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Patch Cable wire color 
\begin_inset Index idx
status open

\begin_layout Plain Layout
T568B
\end_layout

\end_inset

T568B
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+9-28V DC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orange/White 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+9-28V DC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Orange
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3 2 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
+9-28V DC
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Green/White
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4 3 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CANH
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Blue
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5 4 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CANL
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Blue/White
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6 5 4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Green
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brown/White
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
GND
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
RJ-45
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Brown
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
RJ-XX pin-out 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
RJ-11/12/45 pin-out
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/rj45.jpg
	width 9cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ-45 pin out
\end_layout

\end_inset

RJ-45 pin out
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard

\emph on
Always use a pair of wires for CANH/CANL fort best noise immunity.
 If the EIA/TIA 56B standard is used this condition will be satisfied.
 This is good as most Ethernet networks already is wired this way.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Cable length
\end_layout

\end_inset

Cable length
\end_layout

\begin_layout Standard
CAN4VSCP always communicate with 125kbps.
 This means that if you use a good quality cable it can be up to a maximum
 of 500 meters using AWG24
\begin_inset Index idx
status open

\begin_layout Plain Layout
AWG24
\end_layout

\end_inset

 or similar (CAT5
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

) .
 Actual length depend on the environment and other parameters.
 Drops
\begin_inset Index idx
status open

\begin_layout Plain Layout
Drops
\end_layout

\end_inset

 with a maximum length of 24 meters can be taken from this cable and the
 sum of all drops must not exceed a total of 120 meters.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/drops.jpg
	width 12cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
CAN4VSCP bus with drops and terminations
\begin_inset Index idx
status open

\begin_layout Plain Layout
terminations
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Subsection
Termination
\end_layout

\begin_layout Standard
The CAN4VSCP bus, as all CAN
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAN
\end_layout

\end_inset

 based networks, should be terminated
\begin_inset Index idx
status open

\begin_layout Plain Layout
terminated
\end_layout

\end_inset

 with a 120 ohms resistor between CANH
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANH
\end_layout

\end_inset

 and CANL
\begin_inset Index idx
status open

\begin_layout Plain Layout
CANL
\end_layout

\end_inset

 at both ends of the cable.
 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/CAN_Termination.gif
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Termination
\begin_inset Index idx
status open

\begin_layout Plain Layout
Termination
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
If you use CAT5
\begin_inset Index idx
status open

\begin_layout Plain Layout
CAT5
\end_layout

\end_inset

 this termination
\begin_inset Index idx
status open

\begin_layout Plain Layout
termination
\end_layout

\end_inset

 should be placed between the blue - blue/white cables at both end of your
 bus.
\end_layout

\begin_layout Standard

\emph on
On the board there is a jumper for an 
\begin_inset Index idx
status open

\begin_layout Plain Layout
on-board terminator
\end_layout

\end_inset

on-board terminator.

\emph default
 See figure above.
\end_layout

\begin_layout Subsubsection
Why are terminators required? 
\end_layout

\begin_layout Standard
Terminators
\begin_inset Index idx
status open

\begin_layout Plain Layout
Terminators
\end_layout

\end_inset

 are needed to cancel signal echos in the cable.
 In short you get less noise in the cable if you use them.
 It is recommended to use them even if at 125 kbit it is possible that your
 bus will work anyway.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Daisy chain
\end_layout

\end_inset

Daisy chain connector
\end_layout

\begin_layout Standard
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
daisy chain
\end_layout

\end_inset

daisy chain connector is a pin-header that can be used as an easy way to
 
\begin_inset Index idx
status open

\begin_layout Plain Layout
daisy chain
\end_layout

\end_inset

daisy chain several modules in a cabinet or similar.
 You just connect the modules together with a simple cable.
 The pin-out is:
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../paris_relaydriver/manual/images/daisychain.jpg
	width 10cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Daisy chain connector
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Use a twisted cable for CANH/CANL and don't have a cable between mocules
 that is less then 30 centimeters.
\end_layout

\begin_layout Subsection
Power
\begin_inset Index idx
status open

\begin_layout Plain Layout
Power
\end_layout

\end_inset

 the module
\end_layout

\begin_layout Standard
You normally power the module through the RJ45
\begin_inset Index idx
status open

\begin_layout Plain Layout
RJ45
\end_layout

\end_inset

 connector over the CAN4VSCP bus.
 See 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:RJ-XX-pin-out"

\end_inset

 for a description of which pins to use for power
\begin_inset Index idx
status open

\begin_layout Plain Layout
power
\end_layout

\end_inset

 and ground.
 The voltage
\begin_inset Index idx
status open

\begin_layout Plain Layout
voltage
\end_layout

\end_inset

 range is +9VDC - 28VDC.
 The current
\begin_inset Index idx
status open

\begin_layout Plain Layout
current
\end_layout

\end_inset

 need depend on how many modules you want to power.
\end_layout

\begin_layout Standard
An alternative way to power the module is through the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
daisy chain
\end_layout

\end_inset

daisy chain connector described above.
 Just connect +9V - 28V to it's pin 1 and ground to pin 4.
 Needless to say you can't have power supplied by the CAN4VSCP bus at the
 same time.
\end_layout

\begin_layout Subsection
Best practice
\end_layout

\begin_layout Standard
Even if it is possible to have cable lengths up to 500 meters it is better
 to stay at shorter distances to have some margins.
 Here are some guidelines for a reliable set up
\end_layout

\begin_layout Itemize
Total cable length of 300m, stub cables count double their length in that
 total.
\end_layout

\begin_layout Itemize
Nodes count as 6m in that total.
 
\end_layout

\begin_layout Itemize
Never less than 30cm of cable between nodes, nor between a stub connection
 and a node.
 
\end_layout

\begin_layout Itemize
No more than 50 nodes connected.
\end_layout

\begin_layout Standard
Following this best practice you will have a setup that will work reliable
 even in harsh environments.
\end_layout

\begin_layout Section
Installing
\begin_inset Index idx
status open

\begin_layout Plain Layout
Installing
\end_layout

\end_inset

 the module
\end_layout

\begin_layout Standard
Connect the module to the CAN4VSCP bus.
 The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
red led
\end_layout

\end_inset

red led on the module should light up indicating that the device is powered.
 If this is the first time you start up the module the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
green lamp
\end_layout

\end_inset

green lamp next to the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
initializing button
\end_layout

\end_inset

initializing button will start to blink.
 This means that the module is trying to negotiate a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
nickname address
\end_layout

\end_inset

nickname address with the rest of the modules on the bus.
 When it found a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
free nickname
\end_layout

\end_inset

free nickname the green led will light steady.
 If the green led does not start to blink press the initialization button
 until it does.
 Now your module is ready to use.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Termination block
\end_layout

\end_inset

Termination block pin-out
\end_layout

\begin_layout Standard
The individual positions for the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
twelve position termination block
\end_layout

\end_inset

twelve position termination block is numbered from the left (looking into
 it) as in the figure below.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename images/termination_block.png
	width 8cm

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Pin-out
\end_layout

\end_inset

Pin-out for 
\begin_inset Index idx
status open

\begin_layout Plain Layout
termination block
\end_layout

\end_inset

termination block
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Position
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ground
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module VCC = +5VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A/D channel 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module VCC = +5VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A/D channel 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module VCC = +5VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A/D channel 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module VCC = +5VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A/D channel 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module VCC = +5VDC
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
A/D channel 0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Module VCC = +5VDC
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Pin-out
\end_layout

\end_inset

Pin-out for 
\begin_inset Index idx
status open

\begin_layout Plain Layout
termination block
\end_layout

\end_inset

termination block
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Each of the I/O's can be used as an input or as an output independent of
 each other.
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
Updating firmware
\end_layout

\end_inset

Updating firmware
\end_layout

\begin_layout Standard
There is two ways you can use to update the firmware of the module.
 You can program the device using the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
programming socket
\end_layout

\end_inset

programming socket on board or you can use 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP Works
\end_layout

\end_inset

VSCP Works to 
\begin_inset Index idx
status open

\begin_layout Plain Layout
remotely program
\end_layout

\end_inset

remotely program the device.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Update firmware
\end_layout

\end_inset

Update firmware using the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICP connector
\end_layout

\end_inset

ICP connector
\end_layout

\begin_layout Standard
The firmware
\begin_inset Index idx
status open

\begin_layout Plain Layout
firmware
\end_layout

\end_inset

 of a circuit equipped with a 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Microchip microprocessor
\end_layout

\end_inset

Microchip microprocessor usually can be programmed in circuit.
 That is when it is mounted on a printed circuit board.
 This is also true for the Bejing I/O module which have the programming
 connector on-board (J3).
 If you have a programmer for Microchip processors (
\begin_inset Index idx
status open

\begin_layout Plain Layout
Real ICE
\end_layout

\end_inset

Real ICE
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICE
\end_layout

\end_inset

, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICD-2
\end_layout

\end_inset

ICD-2, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
ICD-3
\end_layout

\end_inset

ICD-3, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
PICKIT-2
\end_layout

\end_inset

PICKIT-2, 
\begin_inset Index idx
status open

\begin_layout Plain Layout
PICKIT3
\end_layout

\end_inset

PICKIT3 or other) you can program your own firmware
\begin_inset Index idx
status open

\begin_layout Plain Layout
firmware
\end_layout

\end_inset

 or the latest 
\begin_inset Index idx
status open

\begin_layout Plain Layout
official firmware
\end_layout

\end_inset

official firmware into the module using MPLAB
\begin_inset Index idx
status open

\begin_layout Plain Layout
MPLAB
\end_layout

\end_inset

 or similar tools.
 You can always find a link to the latest firmware on the Bejing I/O module
 home page (
\begin_inset CommandInset href
LatexCommand href
target "http://www.auto.grodansparadis.com/bejing/bejing_a0.html"

\end_inset

).
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Update firmware
\end_layout

\end_inset

Update firmware with VSCP Works
\end_layout

\begin_layout Standard
When a module is installed in a remote location or if you don't have a Microchip
 programmer you can program the module using the built in boot-loader
\begin_inset Index idx
status open

\begin_layout Plain Layout
boot-loader
\end_layout

\end_inset

.
 This can be done with 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP Works
\end_layout

\end_inset

VSCP Works a program that can be run on the Windows or the Linux platform
 and can perform and can perform different maintenance
\begin_inset Index idx
status open

\begin_layout Plain Layout
maintenance
\end_layout

\end_inset

, configuration
\begin_inset Index idx
status open

\begin_layout Plain Layout
configuration
\end_layout

\end_inset

 and 
\begin_inset Index idx
status open

\begin_layout Plain Layout
status checks
\end_layout

\end_inset

status checks of VSCP modules.
 If you have not installed the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP & Friends package
\end_layout

\end_inset

VSCP & Friends package it is time to do so now.
 You can always find the latest version on the VSCP projects download page
 (
\begin_inset CommandInset href
LatexCommand href
target "http://vscp.org/downloads.php"

\end_inset

).
 
\end_layout

\begin_layout Standard
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
boot loader
\end_layout

\end_inset

boot loader process using 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP Works
\end_layout

\end_inset

VSCP Works is described in section 16.4 of the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP specification
\end_layout

\end_inset

VSCP specification.
 The Bejing relay module uses the 
\emph on
PIC1
\begin_inset Index idx
status open

\begin_layout Plain Layout
PIC1
\end_layout

\end_inset


\emph default
 
\begin_inset Index idx
status open

\begin_layout Plain Layout
boot loader
\end_layout

\end_inset

boot loader.
\end_layout

\begin_layout Section
Configure
\begin_inset Index idx
status open

\begin_layout Plain Layout
Configure
\end_layout

\end_inset

 the module?
\end_layout

\begin_layout Standard
You configure a VSCP module by writing content into the modules registers
\begin_inset Index idx
status open

\begin_layout Plain Layout
registers
\end_layout

\end_inset

.
 You can do this manually or with the wizard
\begin_inset Index idx
status open

\begin_layout Plain Layout
wizard
\end_layout

\end_inset

 available in 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP works
\end_layout

\end_inset

VSCP works.
 Using the wizard is absolutely the easiest way to use.
\end_layout

\begin_layout Subsection
Zone
\begin_inset Index idx
status open

\begin_layout Plain Layout
Zone
\end_layout

\end_inset

/
\begin_inset Index idx
status open

\begin_layout Plain Layout
sub-zone
\end_layout

\end_inset

sub-zone
\end_layout

\begin_layout Standard
You should always plan your overall structure.
 The zone and the sub-zone registers found in the first two register positions
 can help you here.
 Think of a zone as a house, floor plan or similar and sub-zone as a room
 or a location.
 Note that this is not an address.
 It's a way to group functionality together.
 Each relay can belong to it's own sub-zone.
 Set it in register 50-56.
\end_layout

\begin_layout Subsection
Functionality for the I/O channels
\end_layout

\begin_layout Standard
You can control the five I/O channels independently of each other.
 
\end_layout

\begin_layout Subsection
Alarm
\begin_inset Index idx
status open

\begin_layout Plain Layout
Alarm
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The module can send alarm events if the protection timer elapses.
 When an alarm occurs a bit is set in the alarm register which is located
 in register position 128.
 You can always read this register to see if the module have sent out and
 alarm events.
 When you read the register the alarm bits will be cleared.
\end_layout

\begin_layout Section
Registers
\begin_inset Index idx
status open

\begin_layout Plain Layout
Registers
\end_layout

\end_inset


\end_layout

\begin_layout Standard
All VSCP modules have a set of 8-bit registers defined.
 Some of them (register 128-255) are predefined and the information in them
 are the same for all VSCP modules.
 See the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
VSCP specification
\end_layout

\end_inset

VSCP specification for a description of their content (
\begin_inset CommandInset href
LatexCommand href
target "http://sourceforge.net/projects/m2m/files/VSCP%20Specification/"

\end_inset

).
 The lower 128 register positions are used for module specific registers.
 It is normally here you find registers with which you configure your module.
 You can also find registers where you typically can read 
\begin_inset Index idx
status open

\begin_layout Plain Layout
status information
\end_layout

\end_inset

status information such as measurement data from the module.
\end_layout

\begin_layout Standard
Below is a description of the registers on the Bejing I/O module.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Zone registers
\end_layout

\end_inset

Zone registers
\end_layout

\begin_layout Itemize

\series bold
Register 0
\series default
(0x00) - Zone.
\end_layout

\begin_layout Itemize

\series bold
Register 1
\series default
(0x01) - Module sub-zone.
\end_layout

\begin_layout Itemize

\series bold
Register 2
\series default
(0x02) - A/D 0 sub-zone.
\end_layout

\begin_layout Itemize

\series bold
Register 3
\series default
(0x03) - A/D 1 sub-zone.
\end_layout

\begin_layout Itemize

\series bold
Register 4
\series default
(0x04) - A/D 2 sub-zone.
\end_layout

\begin_layout Itemize

\series bold
Register 5
\series default
(0x05) - A/D 3 sub-zone.
\end_layout

\begin_layout Itemize

\series bold
Register 6
\series default
(0x06) - A/D 4 sub-zone.
\end_layout

\begin_layout Itemize

\series bold
Register 7
\series default
(0x07) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 8
\series default
(0x08) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 9
\series default
(0x09) - Reserved.
\end_layout

\begin_layout Subsection
A/D channel control registers
\end_layout

\begin_layout Itemize

\series bold
Register 10
\series default
(0x0A) - A/D channel 0 Control Register.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 11
\series default
(0x0B) - A/D channel 1 Control Register.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 12
\series default
(0x0C) - A/D channel 2 Control Register.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 13
\series default
(0x0D) - A/D channel 3 Control Register.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 14
\series default
(0x0E) - A/D channel 4 Control Register.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 15
\series default
(0x0F) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 16
\series default
(0x10) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 17
\series default
(0x11) - Reserved.
\end_layout

\begin_layout Standard
The 
\begin_inset Index idx
status open

\begin_layout Plain Layout
channel control bits
\end_layout

\end_inset

channel control bits enable/disable intelligent A/D functionality:
\end_layout

\begin_layout Itemize

\series bold
Bit 0
\series default
 - Enable event on change.
\end_layout

\begin_layout Itemize

\series bold
Bit 1
\series default
 - Enable periodic events.
\end_layout

\begin_layout Itemize

\series bold
Bit 2
\series default
 - Enable stream.
\end_layout

\begin_layout Itemize

\series bold
Bit 3
\series default
 - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Bit 4
\series default
 - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Bit 5
\series default
 - Enable low alarm.
\end_layout

\begin_layout Itemize

\series bold
Bit 6
\series default
 - Enable high alarm.
\end_layout

\begin_layout Itemize

\series bold
Bit 7
\series default
 - Reserved.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Channel pulse time
\end_layout

\end_inset

A/D channel value
\end_layout

\begin_layout Itemize

\series bold
Register 18
\series default
(0x12) - Current A/D value for channel 0, MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 19
\series default
(0x13) - Current A/D value for channel 0, LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 20
\series default
(0x14) - Current A/D value for channel 1, MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 21
\series default
(0x15) - Current A/D value for channel 1, LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 22
\series default
(0x16) - Current A/D value for channel 2, MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 23
\series default
(0x17) - Current A/D value for channel 2, LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 24
\series default
(0x18) - Current A/D value for channel 3, MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 25
\series default
(x019) - Current A/D value for channel 3, LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 26
\series default
(0x1A) - Current A/D value for channel 4, MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 27
\series default
(0x1B) - Current A/D value for channel 4, LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 28
\series default
(0x1C) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 29
\series default
(0x1D) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 30
\series default
(0x1E) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 31
\series default
(0x1F) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 32
\series default
(0x20) – Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 33
\series default
(0x21) – Reserved.
\end_layout

\begin_layout Standard
The current A/D value.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
I/O channel protection time
\end_layout

\end_inset

A/D channel sample time registers
\end_layout

\begin_layout Itemize

\series bold
Register 34
\series default
(0x22) - Sample time for A/D channel 0 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 35
\series default
(0x23) - Sample time for A/D channel 0 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 36
\series default
(0x24) - Sample time for A/D channel 1 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 37
\series default
(0x25) - Sample time for A/D channel 1 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 38
\series default
(0x26) - Sample time for A/D channel 2 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 39
\series default
(0x27) - Sample time for A/D channel 2 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 40
\series default
(0x28) - Sample time for A/D channel 3 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 41
\series default
(0x29) - Sample time for A/D channel 3 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 42
\series default
(0x2A) - Sample time for A/D channel 4 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 43
\series default
(0x2B) - Sample time for A/D channel 4 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 44
\series default
(0x2C) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 45
\series default
(0x2D) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 46
\series default
(0x2E) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 47
\series default
(0x2F) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 48
\series default
(x030) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 49
\series default
(0x31) - Reserved.
\end_layout

\begin_layout Standard
This is the sample time for each channel set in seconds.
 Set to zero (default) to disable.
\end_layout

\begin_layout Standard
If periodic events are enabled they will be sent with the period set here.
\end_layout

\begin_layout Standard
If event on change is enabled they will be sent with the period set here
 if the value has changed since the last read with a hysteresis set in the
 hysteresis register.
\end_layout

\begin_layout Standard
If stream is enabled stream events will be sent out when the stream buffer
 is full (2 samples).
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Hysteresis register
\end_layout

\end_inset

Hysteresis
\end_layout

\begin_layout Itemize

\series bold
Register 50
\series default
(0x32) - Hysteresis for a changed value.
 Read/Write.
\end_layout

\begin_layout Standard
An A/D channels value must change with at least this value for a change
 to be noticed.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
A/D low alarm registers
\end_layout

\end_inset

A/D low alarm registers
\end_layout

\begin_layout Itemize

\series bold
Register 51
\series default
(0x33) - Low alarm for A/D channel 0 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 52
\series default
(0x34) - Low alarm for A/D channel 0 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 53
\series default
(0x35) - Low alarm for A/D channel 1 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 54
\series default
(0x36) - Low alarm for A/D channel 1 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 55
\series default
(0x37) - Low alarm for A/D channel 2 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 56
\series default
(0x38) - Low alarm for A/D channel 2 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 57
\series default
(0x39) - Low alarm for A/D channel 3 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 58
\series default
(0x3A) - Low alarm for A/D channel 3 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 59
\series default
(0x3B) - Low alarm for A/D channel 4 (seconds) MSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 60
\series default
(0x3C) - Low alarm for A/D channel 4 (seconds) LSB.
 Read/Write.
 
\end_layout

\begin_layout Itemize

\series bold
Register 61
\series default
(0x3D) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 62
\series default
(0x3E) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 63
\series default
(0x3F) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 64
\series default
(0x40) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 65
\series default
(0x41) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 66
\series default
(0x42) - Reserved.
\end_layout

\begin_layout Standard
An alarm event will be sent out if the A/D channel is lower then this value.
 Alarm state is reseted for level + hysterersis.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
A/D high alarm registers
\end_layout

\end_inset

A/D high alarm registers
\end_layout

\begin_layout Itemize

\series bold
Register 67
\series default
(0x43) - High alarm for A/D channel 0 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 68
\series default
(0x44) - High alarm for A/D channel 0 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 69
\series default
(0x45) - High alarm for A/D channel 1 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 70
\series default
(0x46) - High alarm for A/D channel 1 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 71
\series default
(0x47) - High alarm for A/D channel 2 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 72
\series default
(0x48) - High alarm for A/D channel 2 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 73
\series default
(0x49) - High alarm for A/D channel 3 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 74
\series default
(0x4A) - High alarm for A/D channel 3 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 75
\series default
(0x4B) - High alarm for A/D channel 4 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 76
\series default
(0x4C) - High alarm for A/D channel 4 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Itemize

\series bold
Register 77
\series default
(0x4D) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 78
\series default
(0x4E) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 79
\series default
(0x4F) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 80
\series default
(0x50) - Reserved.
\end_layout

\begin_layout Itemize

\series bold
Register 81
\series default
(0x51) - Reserved.
 
\end_layout

\begin_layout Itemize

\series bold
Register 82
\series default
(0x52) - Reserved.
\end_layout

\begin_layout Standard
An alarm event will be sent out if the A/D channel is higher then this value.
 Alarm state is reseted for level - hysterersis.
 
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
A/D value k scaling registers
\end_layout

\end_inset

A/D value scaling registers
\end_layout

\begin_layout Subsubsection
Slope constant of linear equation
\end_layout

\begin_layout Itemize

\series bold
Register 83
\series default
(0x53) - Index into linear equation formula table for slope constant.
\end_layout

\begin_layout Itemize

\series bold
Register 8
\series default
4(0x54) - Value for linear equation formula table slope constant.
\end_layout

\begin_layout Standard
Values is stored as five signed 16-bit values.
 So the value for sensor 0 is at index = 0 (MSB) and at index=1 (LSB) and
 so on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=0 Signed integer scaling 'k' for A/D channel 0 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=1 Signed integer scaling 'k' for A/D channel 0 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=2 Signed integer scaling 'k' for A/D channel 1 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=3 Signed integer scaling 'k' for A/D channel 1 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=4 Signed integer scaling 'k' for A/D channel 2 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=5 Signed integer scaling 'k' for A/D channel 2 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=6 Signed integer scaling 'k' for A/D channel 3 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=7 Signed integer scaling 'k' for A/D channel 3 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=8 Signed integer scaling 'k' for A/D channel 4 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=9 Signed integer scaling 'k' for A/D channel 4 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Subsubsection
y-intercept constant of linear equation
\end_layout

\begin_layout Itemize

\series bold
Register 85
\series default
(0x55) - Index into linear equation formula table for y-intercept constant.
\end_layout

\begin_layout Itemize

\series bold
Register 86
\series default
(0x56) - Value for linear equation formula table y-intercept constant.
\end_layout

\begin_layout Standard
Values is stored as five signed 16-bit values.
 So the value for sensor 0 is at index=0 (MSB) and at index=1 (LSB) and
 so on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=0 Signed integer scaling 'm' for A/D channel 0 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=1 Signed integer scaling 'm' for A/D channel 0 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=2 Signed integer scaling 'm' for A/D channel 1 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=3 Signed integer scaling 'm' for A/D channel 1 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=4 Signed integer scaling 'm' for A/D channel 2 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=5 Signed integer scaling 'm' for A/D channel 2 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=6 Signed integer scaling 'm' for A/D channel 3 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=7 Signed integer scaling 'm' for A/D channel 3 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=8 Signed integer scaling 'm' for A/D channel 4 (seconds) MSB.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=9 Signed integer scaling 'm' for A/D channel 4 (seconds) LSB.
 Read/Write.
\end_layout

\begin_layout Subsubsection
Datacoding for scaling measurement event
\end_layout

\begin_layout Itemize

\series bold
Register 87
\series default
(0x57) - Index to datacoding value.
\end_layout

\begin_layout Itemize

\series bold
Register 88
\series default
(0x58) - Value for datacoding.
\end_layout

\begin_layout Standard
Values is stored as five 8-bit values.
 So the value for sensor 0 is at index=0 and value for sensor 1 at index=1
 and so on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=0 Datacoding for channel 0.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=1 Datacoding for channel 1.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=2 Datacoding for channel 2.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=3 Datacoding for channel 3.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=4 Datacoding for channel 4.
 Read/Write.
\end_layout

\begin_layout Subsubsection
Event class for measurement event
\end_layout

\begin_layout Itemize

\series bold
Register 89
\series default
(0x59) - Index to event class value.
\end_layout

\begin_layout Itemize

\series bold
Register 90
\series default
(0x5A) - Value for event class.
\end_layout

\begin_layout Standard
Values is stored as five 8-bit values.
 So the value for sensor 0 is at index=0 and value for sensor 1 at index=1
 and so on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=0 Event class for channel 0.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=1 Event class for channel 1.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=2 Event class for channel 2.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=3 Event class for channel 3.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=4 Event class for channel 4.
 Read/Write.
\end_layout

\begin_layout Subsubsection
Event type for measurement event
\end_layout

\begin_layout Itemize

\series bold
Register 91
\series default
(0x5B) - Index to event type value.
\end_layout

\begin_layout Itemize

\series bold
Register 92
\series default
(0x5C) - Value for event type.
\end_layout

\begin_layout Standard
Values is stored as five 8-bit values.
 So the value for sensor 0 is at index=0 and value for sensor 1 at index=1
 and so on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=0 Event type for channel 0.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=1 Event type for channel 1.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=2 Event type for channel 2.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=3 Event type for channel 3.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=4 Event type for channel 4.
 Read/Write.
\end_layout

\begin_layout Subsubsection
Number of decimals 
\end_layout

\begin_layout Itemize

\series bold
Register 93
\series default
(0x5D) - Index to event type value.
\end_layout

\begin_layout Itemize

\series bold
Register 94
\series default
(0x5E) - Value for event type.
\end_layout

\begin_layout Standard
Values is stored as five 8-bit values.
 So the value for sensor 0 is at index=0 and value for sensor 1 at index=1
 and so on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=0 Number of decimals for channel 0.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=1 Number of decimals for channel 1.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=2 Number of decimals for channel 2.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=3 Number of decimals for channel 3.
 Read/Write.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Index=4 Number of decimals for channel 4.
 Read/Write.
\end_layout

\begin_layout Standard
The scaling is used with the formula
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard

\emph on
value = k * A/D-value + m
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
where value is calculated as a signed long (4 bytes).
\end_layout

\begin_layout Standard
The value is sent as a normalized integer of Class=10 (0x0a) Measurement.
 The datacoding is should be set to 0b100xx000 where xx is the type for
 the measurement (0b00 if default) see the section on datacoding in the
 VSCP specification.
\end_layout

\begin_layout Section
\begin_inset Index idx
status open

\begin_layout Plain Layout
Decision matrix
\end_layout

\end_inset

Decision matrix
\end_layout

\begin_layout Standard
This module have no decision matrix.
\end_layout

\begin_layout Section
Events
\begin_inset Index idx
status open

\begin_layout Plain Layout
Events
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
A/D value event
\end_layout

\end_inset

A/D value event
\end_layout

\begin_layout Standard
Can be sent on configurable intervals or on value changes.
\end_layout

\begin_layout Paragraph*
Class: 0x015 Type: 0x02
\end_layout

\begin_layout Subsubsection
Data
\end_layout

\begin_layout Itemize
Byte 0: Data coding: 0xC0 + channel.
\end_layout

\begin_layout Itemize
Byte 1: MSB of A/D value.
 
\end_layout

\begin_layout Itemize
Byte 2: LSB of A/D value.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Alarm Event
\end_layout

\end_inset

Alarm Event
\end_layout

\begin_layout Standard
If enabled the event is sent when an input goes to its inactive state after
 a protection timer have timed out.
\end_layout

\begin_layout Paragraph
Class: 0x001 Type: 0x02
\end_layout

\begin_layout Subsubsection
Data
\end_layout

\begin_layout Itemize
Byte 0: index.
 
\end_layout

\begin_layout Itemize
Byte 1: Zone 
\end_layout

\begin_layout Itemize
Byte 2: Sub-zone
\end_layout

\begin_layout Standard
Index is 0 for I/O channel 0, 1 for I/O channel 1 and so on.
 Zone and sub-zone set accordingly.
 Sub-zone is subzone for channel or if it is set to zero the sub-zone for
 the module.
\end_layout

\begin_layout Subsection
\begin_inset Index idx
status open

\begin_layout Plain Layout
Stream data with zoneEvent
\end_layout

\end_inset

Stream data with zone Event
\end_layout

\begin_layout Standard
A stream data event can be configured to be sent on even intervals.
 
\end_layout

\begin_layout Paragraph
Class: 0x014 Type: 0x26
\end_layout

\begin_layout Subsubsection
Data
\end_layout

\begin_layout Itemize
Byte 0: Zone.
 
\end_layout

\begin_layout Itemize
Byte 1: Sub-zone.
 
\end_layout

\begin_layout Itemize
Byte 2: Sequency number.
\end_layout

\begin_layout Itemize
Byte 3: MSB of A/D value.
\end_layout

\begin_layout Itemize
Byte 4: LSB of A/D value.
\end_layout

\begin_layout Standard
Sequency number is increased with one for every event that is sent out.
 Sub-zone is subzone for channel or if set to zero sub-zone for module.
\end_layout

\begin_layout Section
Where can I find the 
\begin_inset Index idx
status open

\begin_layout Plain Layout
source code
\end_layout

\end_inset

source code?
\end_layout

\begin_layout Standard
This module have closed source.
 We recomend that if you are interested in the source please check the Paris
 and/or the Kelvin NTC10KA module which are open source.
\end_layout

\begin_layout Section
Appendix A - 
\begin_inset Index idx
status open

\begin_layout Plain Layout
Mandatory VSCP registers
\end_layout

\end_inset

Mandatory VSCP registers.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\begin_layout Plain Layout


\backslash
resizebox{0.80
\backslash
textwidth}{!}{%
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="31" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="8cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Address 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Access Mode 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0×00 – 0x7f 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
— 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Device specific.
 
\emph on
Unimplemented registers should return zero.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128/0×80 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Alarm status register
\end_layout

\end_inset

Alarm status register content (!= 0 indicates alarm).
 Condition is reset by a read operation.
 The bits represent different alarm conditions.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
129/0×81
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSCP Major version number this device is constructed for.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
130/0×82 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VSCP Minor version number this device is constructed for.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
131/0×83 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Node control flags 
\begin_inset Tabular
<lyxtabular version="3" rows="9" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="4cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start-up control 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Start-up control 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
r/w control of registers below 0×80.
 (1 means write enabled) 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved 
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
132/0×84 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User ID 0 – Client settable node id byte 0.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
133/0×85 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User ID 1 – Client settable node id byte 1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
134/0×86 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User ID 2 – Client settable node id byte 2.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
135/0×87 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User ID 3 – Client settable node id byte 3.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
136/0×88 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
User ID 4 – Client settable node id byte 4.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
137/0×89 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer device ID byte 0.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
138/0x8a 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer device ID byte 1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
139/0x8b 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer device ID byte 2.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
140/0x8c 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer device ID byte 3.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
141/0x8d 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer sub device ID byte 0.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
142/0x8e 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer sub device ID byte 1.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
143/0x8f 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer sub device ID byte 2.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
144/0×90 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Manufacturer sub device ID byte 3.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
145/0×91 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nickname id for node if assigned or 0xff if no nickname id assigned.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
146/0×92 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Page select register MSB
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
147/0×93
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read/Write 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Page Select register LSB
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
148/0×94 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Firmware major version number.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
149/0×95 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Firmware minor version number.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
150/0×96 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Firmware sub minor version number.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
151/0×97 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Boot loader algorithm
\end_layout

\end_inset

Boot loader algorithm used.
 0Xff for no boot loader support.
 Codes for algorithms are specified here VSCP_event_class_000 for Type =
 12 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
152/0×98 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Buffer size.
 The value here gives an indication for clients that want to talk to this
 node if it can support the larger mid level Level I control events which
 has the full GUID.
 If set to 0 the default size should used.
 That is 8 bytes for Level I and 512-25 for Level II.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
153/0×99 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Number of register pages used.
 If not implemented one page is assumed.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
154/0x9A-207/0xcf 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
— 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reserved for future use.
 Return zero.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
208/0xd0-223/0xdf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
128-bit (16-byte) globally unique ID (GUID
\begin_inset Index idx
status open

\begin_layout Plain Layout
GUID
\end_layout

\end_inset

) identifier for the device.
 This identifier uniquely identifies the device throughout the world and
 can give additional information on where driver and driver information
 can be found for the device.
 MSB for the identifier is stored first (in 0xd0).
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
224/0xe0-255/0xff
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Read Only 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Index idx
status open

\begin_layout Plain Layout
Module Description File
\end_layout

\end_inset

Module Description File URL.
 A zero terminates the ASCII string if not exactly 32 bytes long.
 The URL points to a file that gives further information about where drivers
 for different environments are located.
 Can be returned as a zero string for devices with low memory.
 It is recommended that unimplemented registers read as oxff.
 For a node with an embedded MDF return a zero string.
 The CLASS1.PROTOCOL, Type=34/35 can then be used to get the information
 if available.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
VSCP mandatory registers
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"

\end_inset


\end_layout

\end_body
\end_document
